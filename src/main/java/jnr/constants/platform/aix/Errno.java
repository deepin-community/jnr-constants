// WARNING: This file is autogenerated. DO NOT EDIT!
// Generated 2018-05-11 03:41:17 +0000
package jnr.constants.platform.aix;
public enum Errno implements jnr.constants.Constant {
EPERM(1L),
ENOENT(2L),
ESRCH(3L),
EINTR(4L),
EIO(5L),
ENXIO(6L),
E2BIG(7L),
ENOEXEC(8L),
EBADF(9L),
ECHILD(10L),
EDEADLK(45L),
ENOMEM(12L),
EACCES(13L),
EFAULT(14L),
ENOTBLK(15L),
EBUSY(16L),
EEXIST(17L),
EXDEV(18L),
ENODEV(19L),
ENOTDIR(20L),
EISDIR(21L),
EINVAL(22L),
ENFILE(23L),
EMFILE(24L),
ENOTTY(25L),
ETXTBSY(26L),
EFBIG(27L),
ENOSPC(28L),
ESPIPE(29L),
EROFS(30L),
EMLINK(31L),
EPIPE(32L),
EDOM(33L),
ERANGE(34L),
EWOULDBLOCK(11L),
EAGAIN(11L),
EINPROGRESS(55L),
EALREADY(56L),
ENOTSOCK(57L),
EDESTADDRREQ(58L),
EMSGSIZE(59L),
EPROTOTYPE(60L),
ENOPROTOOPT(61L),
EPROTONOSUPPORT(62L),
ESOCKTNOSUPPORT(63L),
EOPNOTSUPP(64L),
EPFNOSUPPORT(65L),
EAFNOSUPPORT(66L),
EADDRINUSE(67L),
EADDRNOTAVAIL(68L),
ENETDOWN(69L),
ENETUNREACH(70L),
ENETRESET(71L),
ECONNABORTED(72L),
ECONNRESET(73L),
ENOBUFS(74L),
EISCONN(75L),
ENOTCONN(76L),
ESHUTDOWN(77L),
ETOOMANYREFS(115L),
ETIMEDOUT(78L),
ECONNREFUSED(79L),
ELOOP(85L),
ENAMETOOLONG(86L),
EHOSTDOWN(80L),
EHOSTUNREACH(81L),
ENOTEMPTY(17L),
EUSERS(84L),
EDQUOT(88L),
ESTALE(52L),
EREMOTE(93L),
ENOLCK(49L),
ENOSYS(109L),
EOVERFLOW(127L),
EIDRM(36L),
ENOMSG(35L),
EILSEQ(116L),
EBADMSG(120L),
EMULTIHOP(125L),
ENODATA(122L),
ENOLINK(126L),
ENOSR(118L),
ENOSTR(123L),
EPROTO(121L),
ETIME(119L);
private final long value;
private Errno(long value) { this.value = value; }
public static final long MIN_VALUE = 1L;
public static final long MAX_VALUE = 127L;

static final class StringTable {
  public static final java.util.Map<Errno, String> descriptions = generateTable();
  public static final java.util.Map<Errno, String> generateTable() {
    java.util.Map<Errno, String> map = new java.util.EnumMap<Errno, String>(Errno.class);
  map.put(EPERM, "Not owner");
  map.put(ENOENT, "No such file or directory");
  map.put(ESRCH, "No such process");
  map.put(EINTR, "Interrupted system call");
  map.put(EIO, "I/O error");
  map.put(ENXIO, "No such device or address");
  map.put(E2BIG, "Arg list too long");
  map.put(ENOEXEC, "Exec format error");
  map.put(EBADF, "Bad file number");
  map.put(ECHILD, "No child processes");
  map.put(EDEADLK, "Deadlock condition if locked");
  map.put(ENOMEM, "Not enough space");
  map.put(EACCES, "Permission denied");
  map.put(EFAULT, "Bad address");
  map.put(ENOTBLK, "Block device required");
  map.put(EBUSY, "Device busy");
  map.put(EEXIST, "File exists");
  map.put(EXDEV, "Cross-device link");
  map.put(ENODEV, "No such device");
  map.put(ENOTDIR, "Not a directory");
  map.put(EISDIR, "Is a directory");
  map.put(EINVAL, "Invalid argument");
  map.put(ENFILE, "File table overflow");
  map.put(EMFILE, "Too many open files");
  map.put(ENOTTY, "Not a typewriter");
  map.put(ETXTBSY, "Text file busy");
  map.put(EFBIG, "File too large");
  map.put(ENOSPC, "No space left on device");
  map.put(ESPIPE, "Illegal seek");
  map.put(EROFS, "Read-only file system");
  map.put(EMLINK, "Too many links");
  map.put(EPIPE, "Broken pipe");
  map.put(EDOM, "Argument out of domain");
  map.put(ERANGE, "Result too large");
  map.put(EWOULDBLOCK, "Resource temporarily unavailable");
  map.put(EAGAIN, "Resource temporarily unavailable");
  map.put(EINPROGRESS, "Operation now in progress");
  map.put(EALREADY, "Operation already in progress");
  map.put(ENOTSOCK, "Socket operation on non-socket");
  map.put(EDESTADDRREQ, "Destination address required");
  map.put(EMSGSIZE, "Message too long");
  map.put(EPROTOTYPE, "Protocol wrong type for socket");
  map.put(ENOPROTOOPT, "Protocol not available");
  map.put(EPROTONOSUPPORT, "Protocol not supported");
  map.put(ESOCKTNOSUPPORT, "Socket type not supported");
  map.put(EOPNOTSUPP, "Operation not supported on socket");
  map.put(EPFNOSUPPORT, "Protocol family not supported");
  map.put(EAFNOSUPPORT, "Addr family not supported by protocol");
  map.put(EADDRINUSE, "Address already in use");
  map.put(EADDRNOTAVAIL, "Can't assign requested address");
  map.put(ENETDOWN, "Network is down");
  map.put(ENETUNREACH, "Network is unreachable");
  map.put(ENETRESET, "Network dropped connection on reset");
  map.put(ECONNABORTED, "Software caused connection abort");
  map.put(ECONNRESET, "Connection reset by peer");
  map.put(ENOBUFS, "No buffer space available");
  map.put(EISCONN, "Socket is already connected");
  map.put(ENOTCONN, "Socket is not connected");
  map.put(ESHUTDOWN, "Can't send after socket shutdown");
  map.put(ETOOMANYREFS, "Too many references: can't splice");
  map.put(ETIMEDOUT, "Connection timed out");
  map.put(ECONNREFUSED, "Connection refused");
  map.put(ELOOP, "Too many levels of symbolic links");
  map.put(ENAMETOOLONG, "File name too long");
  map.put(EHOSTDOWN, "Host is down");
  map.put(EHOSTUNREACH, "No route to host");
  map.put(ENOTEMPTY, "File exists");
  map.put(EUSERS, "Too many users");
  map.put(EDQUOT, "Disk quota exceeded");
  map.put(ESTALE, "Missing file or filesystem");
  map.put(EREMOTE, "Item is not local to host");
  map.put(ENOLCK, "No locks available");
  map.put(ENOSYS, "Function not implemented");
  map.put(EOVERFLOW, "Value too large to be stored in data type");
  map.put(EIDRM, "Identifier removed");
  map.put(ENOMSG, "No message of desired type");
  map.put(EILSEQ, "Invalid wide character");
  map.put(EBADMSG, "Next message has wrong type");
  map.put(EMULTIHOP, "Multihop is not allowed");
  map.put(ENODATA, "No message on stream head read q");
  map.put(ENOLINK, "The server link has been severed");
  map.put(ENOSR, "Out of STREAMS resources");
  map.put(ENOSTR, "fd not associated with a stream");
  map.put(EPROTO, "Error in protocol");
  map.put(ETIME, "System call timed out");
    return map;
  }
}
public final String toString() { return StringTable.descriptions.get(this); }
public final int intValue() { return (int) value; }
public final long longValue() { return value; }
public final boolean defined() { return true; }
}
